name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  send_notification:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}
      - name: Get Commit Message
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}} | sed -En 's/.*\[test\-(.*|\ .*)\]/\1/p' | awk '{$1=$1;print}')
          echo "TEST_TAG=${MSG}" >> $GITHUB_ENV
      - name: Get type of the test
        id: type_of_test
        run: |
          TEST_TYPE="$(echo $TEST_TAG | grep -P '^[^-]*' -o)"
          echo "TYPE_OF_TEST=${TEST_TYPE}" >> $GITHUB_OUTPUT
      - name: Get the file name
        id: file_name
        run: |
          FILE_NAME="$(echo $TEST_TAG | grep -P '(?<=-).*' -o)"
          echo "NAME_OF_FILE=${FILE_NAME}" >> $GITHUB_OUTPUT
          echo "${{ steps.type-of-test.outputs.MORE }}"

    outputs:
      test_type: "${{ steps.type_of_test.outputs.TYPE_OF_TEST }}"
      file_name: "${{ steps.file_name.outputs.NAME_OF_FILE }}"

  check_valid_test_type:
    needs: send_notification
    if: "${{ needs.send_notification.outputs.test_type == 'public' || needs.send_notification.outputs.test_type == 'private' }}"
    name: Check if test type is valid
    runs-on: ubuntu-latest
    steps:
      - name: Print test type validity
        run: |
          echo "Valid test type"

  check_valid_file_name:
    needs: [send_notification, check_valid_test_type]
    if: "${{ needs.check_valid_test_type.result == 'success' }}"
    name: Check if file name exists
    runs-on: ubuntu-latest
    steps:
      - name: Find file name in the directory
        run: |
          test -f src/api/${{needs.send_notification.outputs.file_name}}.js && echo "success"
